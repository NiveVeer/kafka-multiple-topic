/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro.consumer.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Billing extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3539796916031203047L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Billing\",\"namespace\":\"avro.consumer.schema\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"alternate_id\",\"type\":\"string\"},{\"name\":\"invoice_code\",\"type\":[\"null\",\"string\"]},{\"name\":\"gross_contract\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":13,\"scale\":2}]},{\"name\":\"pymts_received\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":13,\"scale\":2}]},{\"name\":\"pymts_received_d\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":13,\"scale\":2}]},{\"name\":\"contract_pymt\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":13,\"scale\":2}]},{\"name\":\"variable_pymt_code\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Billing> ENCODER =
      new BinaryMessageEncoder<Billing>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Billing> DECODER =
      new BinaryMessageDecoder<Billing>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Billing> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Billing> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Billing> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Billing>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Billing to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Billing from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Billing instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Billing fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long id;
  private java.lang.CharSequence alternate_id;
  private java.lang.CharSequence invoice_code;
  private java.nio.ByteBuffer gross_contract;
  private java.nio.ByteBuffer pymts_received;
  private java.nio.ByteBuffer pymts_received_d;
  private java.nio.ByteBuffer contract_pymt;
  private int variable_pymt_code;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Billing() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param alternate_id The new value for alternate_id
   * @param invoice_code The new value for invoice_code
   * @param gross_contract The new value for gross_contract
   * @param pymts_received The new value for pymts_received
   * @param pymts_received_d The new value for pymts_received_d
   * @param contract_pymt The new value for contract_pymt
   * @param variable_pymt_code The new value for variable_pymt_code
   */
  public Billing(java.lang.Long id, java.lang.CharSequence alternate_id, java.lang.CharSequence invoice_code, java.nio.ByteBuffer gross_contract, java.nio.ByteBuffer pymts_received, java.nio.ByteBuffer pymts_received_d, java.nio.ByteBuffer contract_pymt, java.lang.Integer variable_pymt_code) {
    this.id = id;
    this.alternate_id = alternate_id;
    this.invoice_code = invoice_code;
    this.gross_contract = gross_contract;
    this.pymts_received = pymts_received;
    this.pymts_received_d = pymts_received_d;
    this.contract_pymt = contract_pymt;
    this.variable_pymt_code = variable_pymt_code;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return alternate_id;
    case 2: return invoice_code;
    case 3: return gross_contract;
    case 4: return pymts_received;
    case 5: return pymts_received_d;
    case 6: return contract_pymt;
    case 7: return variable_pymt_code;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: alternate_id = (java.lang.CharSequence)value$; break;
    case 2: invoice_code = (java.lang.CharSequence)value$; break;
    case 3: gross_contract = (java.nio.ByteBuffer)value$; break;
    case 4: pymts_received = (java.nio.ByteBuffer)value$; break;
    case 5: pymts_received_d = (java.nio.ByteBuffer)value$; break;
    case 6: contract_pymt = (java.nio.ByteBuffer)value$; break;
    case 7: variable_pymt_code = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'alternate_id' field.
   * @return The value of the 'alternate_id' field.
   */
  public java.lang.CharSequence getAlternateId() {
    return alternate_id;
  }


  /**
   * Sets the value of the 'alternate_id' field.
   * @param value the value to set.
   */
  public void setAlternateId(java.lang.CharSequence value) {
    this.alternate_id = value;
  }

  /**
   * Gets the value of the 'invoice_code' field.
   * @return The value of the 'invoice_code' field.
   */
  public java.lang.CharSequence getInvoiceCode() {
    return invoice_code;
  }


  /**
   * Sets the value of the 'invoice_code' field.
   * @param value the value to set.
   */
  public void setInvoiceCode(java.lang.CharSequence value) {
    this.invoice_code = value;
  }

  /**
   * Gets the value of the 'gross_contract' field.
   * @return The value of the 'gross_contract' field.
   */
  public java.nio.ByteBuffer getGrossContract() {
    return gross_contract;
  }


  /**
   * Sets the value of the 'gross_contract' field.
   * @param value the value to set.
   */
  public void setGrossContract(java.nio.ByteBuffer value) {
    this.gross_contract = value;
  }

  /**
   * Gets the value of the 'pymts_received' field.
   * @return The value of the 'pymts_received' field.
   */
  public java.nio.ByteBuffer getPymtsReceived() {
    return pymts_received;
  }


  /**
   * Sets the value of the 'pymts_received' field.
   * @param value the value to set.
   */
  public void setPymtsReceived(java.nio.ByteBuffer value) {
    this.pymts_received = value;
  }

  /**
   * Gets the value of the 'pymts_received_d' field.
   * @return The value of the 'pymts_received_d' field.
   */
  public java.nio.ByteBuffer getPymtsReceivedD() {
    return pymts_received_d;
  }


  /**
   * Sets the value of the 'pymts_received_d' field.
   * @param value the value to set.
   */
  public void setPymtsReceivedD(java.nio.ByteBuffer value) {
    this.pymts_received_d = value;
  }

  /**
   * Gets the value of the 'contract_pymt' field.
   * @return The value of the 'contract_pymt' field.
   */
  public java.nio.ByteBuffer getContractPymt() {
    return contract_pymt;
  }


  /**
   * Sets the value of the 'contract_pymt' field.
   * @param value the value to set.
   */
  public void setContractPymt(java.nio.ByteBuffer value) {
    this.contract_pymt = value;
  }

  /**
   * Gets the value of the 'variable_pymt_code' field.
   * @return The value of the 'variable_pymt_code' field.
   */
  public int getVariablePymtCode() {
    return variable_pymt_code;
  }


  /**
   * Sets the value of the 'variable_pymt_code' field.
   * @param value the value to set.
   */
  public void setVariablePymtCode(int value) {
    this.variable_pymt_code = value;
  }

  /**
   * Creates a new Billing RecordBuilder.
   * @return A new Billing RecordBuilder
   */
  public static avro.consumer.schema.Billing.Builder newBuilder() {
    return new avro.consumer.schema.Billing.Builder();
  }

  /**
   * Creates a new Billing RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Billing RecordBuilder
   */
  public static avro.consumer.schema.Billing.Builder newBuilder(avro.consumer.schema.Billing.Builder other) {
    if (other == null) {
      return new avro.consumer.schema.Billing.Builder();
    } else {
      return new avro.consumer.schema.Billing.Builder(other);
    }
  }

  /**
   * Creates a new Billing RecordBuilder by copying an existing Billing instance.
   * @param other The existing instance to copy.
   * @return A new Billing RecordBuilder
   */
  public static avro.consumer.schema.Billing.Builder newBuilder(avro.consumer.schema.Billing other) {
    if (other == null) {
      return new avro.consumer.schema.Billing.Builder();
    } else {
      return new avro.consumer.schema.Billing.Builder(other);
    }
  }

  /**
   * RecordBuilder for Billing instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Billing>
    implements org.apache.avro.data.RecordBuilder<Billing> {

    private long id;
    private java.lang.CharSequence alternate_id;
    private java.lang.CharSequence invoice_code;
    private java.nio.ByteBuffer gross_contract;
    private java.nio.ByteBuffer pymts_received;
    private java.nio.ByteBuffer pymts_received_d;
    private java.nio.ByteBuffer contract_pymt;
    private int variable_pymt_code;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro.consumer.schema.Billing.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.alternate_id)) {
        this.alternate_id = data().deepCopy(fields()[1].schema(), other.alternate_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.invoice_code)) {
        this.invoice_code = data().deepCopy(fields()[2].schema(), other.invoice_code);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.gross_contract)) {
        this.gross_contract = data().deepCopy(fields()[3].schema(), other.gross_contract);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.pymts_received)) {
        this.pymts_received = data().deepCopy(fields()[4].schema(), other.pymts_received);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.pymts_received_d)) {
        this.pymts_received_d = data().deepCopy(fields()[5].schema(), other.pymts_received_d);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.contract_pymt)) {
        this.contract_pymt = data().deepCopy(fields()[6].schema(), other.contract_pymt);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.variable_pymt_code)) {
        this.variable_pymt_code = data().deepCopy(fields()[7].schema(), other.variable_pymt_code);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing Billing instance
     * @param other The existing instance to copy.
     */
    private Builder(avro.consumer.schema.Billing other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alternate_id)) {
        this.alternate_id = data().deepCopy(fields()[1].schema(), other.alternate_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.invoice_code)) {
        this.invoice_code = data().deepCopy(fields()[2].schema(), other.invoice_code);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gross_contract)) {
        this.gross_contract = data().deepCopy(fields()[3].schema(), other.gross_contract);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pymts_received)) {
        this.pymts_received = data().deepCopy(fields()[4].schema(), other.pymts_received);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pymts_received_d)) {
        this.pymts_received_d = data().deepCopy(fields()[5].schema(), other.pymts_received_d);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.contract_pymt)) {
        this.contract_pymt = data().deepCopy(fields()[6].schema(), other.contract_pymt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.variable_pymt_code)) {
        this.variable_pymt_code = data().deepCopy(fields()[7].schema(), other.variable_pymt_code);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternate_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getAlternateId() {
      return alternate_id;
    }


    /**
      * Sets the value of the 'alternate_id' field.
      * @param value The value of 'alternate_id'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setAlternateId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.alternate_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'alternate_id' field has been set.
      * @return True if the 'alternate_id' field has been set, false otherwise.
      */
    public boolean hasAlternateId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'alternate_id' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearAlternateId() {
      alternate_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'invoice_code' field.
      * @return The value.
      */
    public java.lang.CharSequence getInvoiceCode() {
      return invoice_code;
    }


    /**
      * Sets the value of the 'invoice_code' field.
      * @param value The value of 'invoice_code'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setInvoiceCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.invoice_code = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'invoice_code' field has been set.
      * @return True if the 'invoice_code' field has been set, false otherwise.
      */
    public boolean hasInvoiceCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'invoice_code' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearInvoiceCode() {
      invoice_code = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'gross_contract' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getGrossContract() {
      return gross_contract;
    }


    /**
      * Sets the value of the 'gross_contract' field.
      * @param value The value of 'gross_contract'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setGrossContract(java.nio.ByteBuffer value) {
      validate(fields()[3], value);
      this.gross_contract = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'gross_contract' field has been set.
      * @return True if the 'gross_contract' field has been set, false otherwise.
      */
    public boolean hasGrossContract() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'gross_contract' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearGrossContract() {
      gross_contract = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'pymts_received' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getPymtsReceived() {
      return pymts_received;
    }


    /**
      * Sets the value of the 'pymts_received' field.
      * @param value The value of 'pymts_received'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setPymtsReceived(java.nio.ByteBuffer value) {
      validate(fields()[4], value);
      this.pymts_received = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'pymts_received' field has been set.
      * @return True if the 'pymts_received' field has been set, false otherwise.
      */
    public boolean hasPymtsReceived() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'pymts_received' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearPymtsReceived() {
      pymts_received = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'pymts_received_d' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getPymtsReceivedD() {
      return pymts_received_d;
    }


    /**
      * Sets the value of the 'pymts_received_d' field.
      * @param value The value of 'pymts_received_d'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setPymtsReceivedD(java.nio.ByteBuffer value) {
      validate(fields()[5], value);
      this.pymts_received_d = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'pymts_received_d' field has been set.
      * @return True if the 'pymts_received_d' field has been set, false otherwise.
      */
    public boolean hasPymtsReceivedD() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'pymts_received_d' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearPymtsReceivedD() {
      pymts_received_d = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'contract_pymt' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getContractPymt() {
      return contract_pymt;
    }


    /**
      * Sets the value of the 'contract_pymt' field.
      * @param value The value of 'contract_pymt'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setContractPymt(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.contract_pymt = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'contract_pymt' field has been set.
      * @return True if the 'contract_pymt' field has been set, false otherwise.
      */
    public boolean hasContractPymt() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'contract_pymt' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearContractPymt() {
      contract_pymt = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'variable_pymt_code' field.
      * @return The value.
      */
    public int getVariablePymtCode() {
      return variable_pymt_code;
    }


    /**
      * Sets the value of the 'variable_pymt_code' field.
      * @param value The value of 'variable_pymt_code'.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder setVariablePymtCode(int value) {
      validate(fields()[7], value);
      this.variable_pymt_code = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'variable_pymt_code' field has been set.
      * @return True if the 'variable_pymt_code' field has been set, false otherwise.
      */
    public boolean hasVariablePymtCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'variable_pymt_code' field.
      * @return This builder.
      */
    public avro.consumer.schema.Billing.Builder clearVariablePymtCode() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Billing build() {
      try {
        Billing record = new Billing();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.alternate_id = fieldSetFlags()[1] ? this.alternate_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.invoice_code = fieldSetFlags()[2] ? this.invoice_code : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.gross_contract = fieldSetFlags()[3] ? this.gross_contract : (java.nio.ByteBuffer) defaultValue(fields()[3]);
        record.pymts_received = fieldSetFlags()[4] ? this.pymts_received : (java.nio.ByteBuffer) defaultValue(fields()[4]);
        record.pymts_received_d = fieldSetFlags()[5] ? this.pymts_received_d : (java.nio.ByteBuffer) defaultValue(fields()[5]);
        record.contract_pymt = fieldSetFlags()[6] ? this.contract_pymt : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.variable_pymt_code = fieldSetFlags()[7] ? this.variable_pymt_code : (java.lang.Integer) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Billing>
    WRITER$ = (org.apache.avro.io.DatumWriter<Billing>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Billing>
    READER$ = (org.apache.avro.io.DatumReader<Billing>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










